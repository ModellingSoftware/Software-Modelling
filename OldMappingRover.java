// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package ROVU;

import javax.vecmath.Vector3d;

import jogamp.nativewindow.Debug;

import java.io.*;

/************************************************************/
/**
 * 
 */
public class OldMappingRover extends Rover {
	public OldMappingRover(Vector3d arg0, String arg1) {
		super(arg0, arg1);
		
		out = new PrintStream(System.out);
        setSpawnRotation();
	}
	
	PrintStream out;

	/**
	 * 
	 */
	private mapObject map;
	
	private Vector3d destination;

	private int savedCounter;
	/**
	 * 
	 */
	public void updateMap() {
	}

	/**
	 * 
	 * @return  
	 */
	public boolean isDoneMapping() {
		return false;
	}

	/**
	 * 
	 */
	public void start() {
	}

	/**
	 * 
	 */
	public void sendMap() {
	}

	/**
	 * 
	 * @return
	 */
	public mapObject getMap() {
		return map;
	}

	/**
	 * 
	 * @param map
	 */
	public void setMap(mapObject map) {
		this.map = map;
	}
	
	public boolean reachedDestination() {
		Vector3d currentPos 
		= this.getPosition();
		out.print(currentPos + ":curr\n");
		out.print(destination + ":dest\n\n");
		if ((int) (currentPos.x + 0.5f) == (int) (destination.x + 0.5f) && (int) (currentPos.z + 0.5f) == (int) (destination.z + 0.5f)) {
			return true;
		}
		
		return false;
	}
	
	public void initBehavior() {
		out.print("init\n\n\n\n\n\n\n\n\n");
		//this.setCurrentMode("waiting");		
		this.setCurrentMode("moveStep");
		
		Vector3d currentPos = this.getPosition();
    	destination = currentPos;
    	
    	savedCounter = this.getCounter();
	}
	
	public void performBehavior() {
    	if (this.isActive()) {  
			if (this.getCounter() == savedCounter) {
	    		if (this.getCurrentMode().equals("waiting")) {
	    			this.setCurrentMode("moveStep");
		        	out.print("perfwaitedLongEnough \n");
	    		}
			}

    		if (this.getCurrentMode().equals("moveStep")) { 		
	        	setRotationalVelocity(0);
	        	
	        	Vector3d currentPos = this.getPosition();
	        	destination = new Vector3d (currentPos.x + 1, currentPos.y, currentPos.z);
	        	
	            this.setTranslationalVelocity(getMaxSpeed());
				this.setCurrentMode("moving");
    		}
    		
    		if (this.getCurrentMode().equals("moving")) {
	    		if (reachedDestination()) {
					out.print("reachedDest");
					savedCounter = this.getCounter() + 80;
		            this.setTranslationalVelocity(0);
					this.setCurrentMode("waiting");
				}
    		}
    	}
	}
};
